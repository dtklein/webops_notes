Kanban is a principle of operations in which work and resources is pulled in by the downstream actor, rather than pushed by the upstream actor. This allows a consistent cadence, and helps time delivery as close to JIT as possible, meeting the needs of the final consumer rapidly and closer to his requirements. 

In a webops context, Kanban is a technique used by both software development teams and operations teams to move work through the system at a consistent and efficient pace. The goals of Kanban are to keep work flowing through the system at a consistent cadence, at high quality. 

To implement a Kanban system, you must first obtain agreement from all members of the team to adhere to the practices. 

######
## Flesh these out to prose form
######

 * Agree on a maximum number of WIP items  
 * Create a Kanban board, either on a wall, in software or elsewhere
 * On the Kanban board, create three categories
   * Backlog
   * WIP
   * Completed
 * As a person has the time cycles to work on a work-element, they move it from the Backlog to the WIP, assign their name to it, and begin work
 * As a person completes a work-element, they move the completed work-element from the WIP to the Completed category, and pull a new work-element from the Backlog to the WIP
 * The maximum number of work-elements in WIP should be set for the group as a whole, and should be low, to keep from losing work quality and focus in context-switching

As an example, a team of six may use a section of wall as a Kanban board, with three columns labeled "Backlog", "WIP" and "Completed", and with each work-element represented as a notecard. The team of six may agree to a maximum of twelve open work-items in WIP, with each member being responsible for an average of two work-elements at a time. As cards move from column-to-column, stalled work-elements become obvious, as other work-elements flow around them. 

